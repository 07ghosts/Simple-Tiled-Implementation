{"name":"Simple Tiled Implementation","tagline":"Tiled library for LÖVE","body":"Simple Tiled Implementation\r\n==\r\n---\r\nSimple Tiled Implementation is a [**Tiled Map Editor**][Tiled] library designed for the *awesome* [**LÖVE**][LOVE] framework.\r\n\r\nQuick Example\r\n--\r\n---\r\n```lua     \r\nlocal sti = require \"sti\"\r\n\r\nfunction love.load()\r\n\t-- Load a map exported to Lua from Tiled\r\n\tmap = sti.new(\"assets/maps/map01\")\r\n\t\r\n\t-- Create a Collision Map to use with your own collision code\r\n\tmap:createCollisionMap(\"Collision Layer\")\r\n\t\r\n\t-- Create a Custom Layer\r\n\tmap:newCustomLayer(\"Sprite Layer\", 3)\r\n\t\r\n\t-- Add data to Custom Layer\r\n\tlocal spriteLayer = map.layers[\"Sprite Layer\"]\r\n\tspriteLayer.sprites = {\r\n\t\tplayer = {\r\n\t\t\timage = love.graphics.newImage(\"assets/sprites/player.png\"),\r\n\t\t\tx = 64,\r\n\t\t\ty = 64,\r\n\t\t\tr = 0,\r\n\t\t}\r\n\t}\r\n\t\r\n\t-- Update callback for Custom Layer\r\n\tfunction spriteLayer:update(dt)\r\n\t\tfor _, sprite in pairs(self.sprites) do\r\n\t\t\tsprite.r = sprite.r + 90 * dt\r\n\t\tend\r\n\tend\r\n\t\r\n\t-- Draw callback for Custom Layer\r\n\tfunction spriteLayer:draw()\r\n\t\tfor _, sprite in pairs(self.sprites) do\r\n\t\t\tlocal x = math.floor(sprite.x)\r\n\t\t\tlocal y = math.floor(sprite.y)\r\n\t\t\tlocal r = math.rad(sprite.r)\r\n\t\t\tlove.graphics.draw(sprite.image, x, y, r)\r\n\t\tend\r\n\tend\r\nend\r\n\r\nfunction love.update(dt)\r\n\tmap:update(dt)\r\nend\r\n\r\nfunction love.draw()\r\n\tmap:draw()\r\n\t\r\n\t-- Draw Collision Map (useful for debugging)\r\n\tmap:drawCollisionMap()\r\nend\r\n\r\n```\r\n\r\nLicense\r\n--\r\n---\r\nThis code is licensed under the [**MIT Open Source License**][MIT]. Check out the LICENSE file for more information.\r\n\r\n[Tiled]: http://www.mapeditor.org/\r\n[LOVE]: https://www.love2d.org/\r\n[MIT]: http://www.opensource.org/licenses/mit-license.html","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}